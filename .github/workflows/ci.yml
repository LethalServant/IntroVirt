name: CI

on:
  push:
    paths-ignore: ['**.md']
  pull_request:
    paths-ignore: ['**.md']

jobs:
  Clang_Format:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
        with:
          path: IntroVirt
      - name: Setup
        run: |
          sudo apt-get update
          sudo apt-get install -y clang-format
        shell: bash
      - name: Validate Source Formatting
        run: |
          cd IntroVirt
          find . -name '*.hh' -o -iname '*.cc' | xargs clang-format -i -style=file
          if [[ -n $(git diff) ]]; then
            echo "You must run make format before submitting a pull request"
            echo ""
            git diff
            exit -1
          fi
        shell: bash

  Release:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - name: Setup
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake ninja-build libcurl4-openssl-dev \
            libboost-dev libboost-program-options-dev libboost-stacktrace-dev \
            liblog4cxx-dev python3-jinja2 python3 \
            doxygen clang-format git
          mkdir /tmp/iv && cd /tmp/iv
          curl --location --silent --show-error --output libmspdb.zip \
            https://github.com/IntroVirt/libmspdb/releases/latest/download/libmspdb.zip
          unzip libmspdb.zip
          sudo apt-get install -y ./*.deb
        shell: bash
      - name: Validate Release Build
        run: |
          cd build
          cmake .. -GNinja -DCMAKE_BUILD_TYPE=Release
          ninja
          ninja package
          mkdir release && mv *.deb release/
        shell: bash
      - name: Archive debian packages
        uses: actions/upload-artifact@v3
        with:
          name: introvirt_release_deb
          path: build/release/*.deb
  Test_release:
    runs-on: macos-12
    needs: Release
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Install Ansible via python
        run: python3 -m pip install ansible
      - name: Run MacOS System Checks
        run: ./scripts/macos-system-checks.sh
      - name: Download introvirt release debian packages
        uses: actions/download-artifact@v3
        with:
          name: introvirt_release_deb
          path: ansible/playbooks/roles/ivhost/files
      - name: Check files
        run: ls -R ansible/playbooks/roles/ivhost/files
      - name: Build ivhost to test introvirt
        run: |
          cd vagrant/ivhost && \
          vagrant up
          vagrant status

  Debug:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - name: Setup
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake ninja-build libcurl4-openssl-dev \
            libboost-dev libboost-program-options-dev libboost-stacktrace-dev \
            liblog4cxx-dev python3-jinja2 python3 \
            doxygen clang-format git
          mkdir /tmp/iv && cd /tmp/iv
          curl --location --silent --show-error --output libmspdb.zip \
            https://github.com/IntroVirt/libmspdb/releases/latest/download/libmspdb.zip
          unzip libmspdb.zip
          sudo apt-get install -y ./*.deb
        shell: bash
      - name: Validate Debug Build
        run: |
          cd build
          cmake .. -GNinja -DCMAKE_BUILD_TYPE=Debug
          ninja
          ninja package
          mkdir debug && mv ./*.deb debug/
        shell: bash
      - name: Archive debian packages
        uses: actions/upload-artifact@v3
        with:
          name: introvirt_debug_deb
          path: build/debug/*.deb
  Test_debug:
    runs-on: macos-12
    needs: Debug
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Install Ansible via python
        run: python3 -m pip install ansible
      - name: Run MacOS System Checks
        run: ./scripts/macos-system-checks.sh
      - name: Download introvirt debug debian packages
        uses: actions/download-artifact@v3
        with:
          name: introvirt_debug_deb
          path: ansible/playbooks/roles/ivhost/files
      - name: Check files
        run: ls -R ansible/playbooks/roles/ivhost/files
      - name: Build ivhost to test introvirt
        run: |
          cd vagrant/ivhost && \
          vagrant up
          vagrant status
